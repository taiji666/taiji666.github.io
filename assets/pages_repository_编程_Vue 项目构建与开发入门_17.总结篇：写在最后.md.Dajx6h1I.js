import{_ as a,c as e,G as s,b as t}from"./chunks/framework.D5KJDRhN.js";const o=JSON.parse('{"title":"17.总结篇：写在最后","description":"","frontmatter":{"title":"17.总结篇：写在最后","date":"2025-02-22T00:00:00.000Z","categories":["Vue 项目构建与开发入门"],"head":[["link",{"rel":"canonical","href":"https://www.doit.ip-ddns.com/pages/repository/编程/Vue 项目构建与开发入门/17.总结篇：写在最后"}]]},"headers":[],"relativePath":"pages/repository/编程/Vue 项目构建与开发入门/17.总结篇：写在最后.md","filePath":"pages/repository/编程/Vue 项目构建与开发入门/17.总结篇：写在最后.md","lastUpdated":1739887664000}');const p=a({name:"pages/repository/编程/Vue 项目构建与开发入门/17.总结篇：写在最后.md"},[["render",function(a,o,p,r,i,l){return t(),e("div",null,o[0]||(o[0]=[s('<p>看到这里，也就是要和大家说再见的时候了，其实还有很多想和大家分享的内容没能来得及一一阐述，但是没有关系，我相信在今后学习 Vue 的道路上我们永远会保持关注，彼此照应，一起学习，一起进步。</p><p>而正所谓温故而知新，可以为师矣，接下来我们不妨一起回顾下本小册的主要内容。</p><h2 id="回顾与总结" tabindex="-1">回顾与总结 <a class="header-anchor" href="#回顾与总结" aria-label="Permalink to &quot;回顾与总结&quot;">​</a></h2><p>浏览小册目录，我们可以清楚的将小册的内容归类为构建与开发两部分，这也是本小册所要分享的知识点所在。</p><p>在小册构建部分我们由浅入深的进行了项目构建的学习，在 <code>Vue CLI 3.x</code> 的基础上，从基础构建开始，经历了 <code>npm</code> 与 <code>yarn</code> 的使用、<code>webpack</code> 的配置以及项目环境的注入，最后通过单页应用和多页应用的构建实战来进一步强化大家的认知，并对构建出的项目进行了整合和优化。</p><p>而在小册开发部分，我们主要针对 Vue 项目开发过程中可能遇到的技术点、难点及优化点进行了指南性的介绍，包括了编码技巧与规范、可复用性模块的编写、组件的职能划分、数据驱动的介绍以及 Vue API 的解析等，通过理论结合实战的形式一步步地帮助大家构筑 Vue 开发知识体系。</p><p>相对于偏具体实战性质的书籍，本小册主要偏向理论及应用层面。因为小册没有针对实现某一系统性的功能或项目进行详细的讲解，而是介绍了从无到有开发一个 Vue 基础项目的方法和经验，本着“授人以渔”的宗旨给大家进行应用性质的指南，而至于具体的业务及功能场景，则需要大家自己去填充。</p><h2 id="进阶与提升" tabindex="-1">进阶与提升 <a class="header-anchor" href="#进阶与提升" aria-label="Permalink to &quot;进阶与提升&quot;">​</a></h2><p>由于本小册定位是一本入门提升级的书籍，很多底层和原理性的知识都没能够在此详细介绍，如果你看完本小册并已经充分掌握了小册中的知识体系，或许接下来你可能有点迷茫，不知道下一步该如何完善自己的项目。不用担心，你可以按照下图的知识路线进一步提升自己，将一个纯前端的项目发展为由<strong>前端 —— 中间层</strong>组成的真正前后端分离的项目，如下图所示：</p><p><a class="img-fancybox" href="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/10/26/166b1039eecd39a9~tplv-t2oaga2asx-image.image" data-fancybox="gallery" data-caption=""><img class="post-img" src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/10/26/166b1039eecd39a9~tplv-t2oaga2asx-image.image" alt="" loading="lazy"><span class="post-img-tip"></span></a></p><p>本小册讲解的是上图中纯前端部分的内容，而所谓的 Node 中间层其实就是处于前端数据请求与后台响应渲染中间位置的架构，它是运行在服务端的，可以帮助我们启动脱离于后台项目的前端服务并实现数据的中转处理与页面渲染等功能。</p><p>这里我们需要了解 Node.js 的 Web 开发框架 <a href="https://github.com/koajs/koa" target="_blank" rel="noreferrer">Koa</a>（或者 <a href="https://github.com/expressjs/express" target="_blank" rel="noreferrer">Express</a>）, 你可以尝试使用 Koa 项目脚手架 <a href="https://github.com/17koa/koa-generator" target="_blank" rel="noreferrer">koa-generator</a> 来实现一个简单的中间层项目。</p><p>在我们的 Vue 项目中，我们通过 webpack 打包在 dist 目录下输出了用于生产环境的静态文件，那么这些静态文件最后哪里会使用它们？其实我们可以通过启动 Node 服务来进行加载并渲染入口 html，也就是最终我们将这些文件放在服务器上运行的效果。</p><p><a class="img-fancybox" href="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/11/1/166cafe8fabd52d3~tplv-t2oaga2asx-image.image" data-fancybox="gallery" data-caption=""><img class="post-img" src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/11/1/166cafe8fabd52d3~tplv-t2oaga2asx-image.image" alt="" loading="lazy"><span class="post-img-tip"></span></a></p><p>当然中间层的作用远不止渲染我们打包后的页面这么简单，通过添加一些 <code>middleware</code>（中间件）我们可以将客户端的一些功能转移到服务端处理，比如登录验证、用户信息获取、路由重定向以及各页面业务逻辑的封装等。感兴趣的同学可以以此为进阶和提升的下一个目标。</p><h2 id="作者寄语" tabindex="-1">作者寄语 <a class="header-anchor" href="#作者寄语" aria-label="Permalink to &quot;作者寄语&quot;">​</a></h2><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>文森特·梵高曾经说过：“不要吹灭你的灵感和你的想象力; 不要成为你的模型的奴隶。”</span></span>\n<span class="line"><span>看完本小册，你可能并没有学到什么，但是我希望你能发现什么，发现自己的灵感，发挥自己的想象力去继续深挖填充小册中介绍的内容，永远不要止步于当下，你还有很多东西需要去学习。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>我们应该抱着玩的心态的去尝试各种新鲜的技术，然后回归运用到应用中去，毕竟世界那么大，每一个 <code>Hello Wrold</code> 实战都是你打开未知大门的钥匙。</p><p>有些时候你花了时间去学习，但是最后总会茫然的感觉自己并没有收获任何实际性的东西，其实你忽略了自己的思想，忽略了思想上的提升。就好比有些人上了四年大学，当他回望大学生涯的时候会发现大学并没有教会他什么，但却给了他一种思想，而这种思想正塑造了自己的人生。</p><p>Vue 的学习并非一朝一夕就能完成的，不要吝啬自己的学习时间，也不要局限于 Vue 本身，因为所有知识都是融会贯通的，当你学会了 <code>React</code> 的时候再来看看 Vue 的文档，或许也会有一种似曾相识的亲切感。</p><p>最后，愿自己码梦为生，笔耕不辍；愿你码到成功，初心不改。</p><h2 id="关于作者" tabindex="-1">关于作者 <a class="header-anchor" href="#关于作者" aria-label="Permalink to &quot;关于作者&quot;">​</a></h2><p>如果你喜欢我的文章并想继续关注“劳卜”我的话，可以扫一扫下方的二维码关注我的微信公众号「前端呼啦圈」，第一时间获取我的原创推送。</p><p><a class="img-fancybox" href="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/10/27/166b60f778687af7~tplv-t2oaga2asx-image.image" data-fancybox="gallery" data-caption=""><img class="post-img" src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/10/27/166b60f778687af7~tplv-t2oaga2asx-image.image" alt="" loading="lazy"><span class="post-img-tip"></span></a></p><p>同时也可以关注我的博客：<a href="http://www.cnblogs.com/luozhihao/" target="_blank" rel="noreferrer">http://www.cnblogs.com/luozhihao/</a></p>',25)]))}]]);export{o as __pageData,p as default};
