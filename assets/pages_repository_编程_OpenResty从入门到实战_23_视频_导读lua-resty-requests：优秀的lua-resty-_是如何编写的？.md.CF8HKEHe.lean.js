import{_ as e,c as s,G as t,b as a}from"./chunks/framework.D5KJDRhN.js";const r=JSON.parse('{"title":"23[视频]导读lua-resty-requests：优秀的lua-resty-_是如何编写的？","description":"","frontmatter":{"title":"23[视频]导读lua-resty-requests：优秀的lua-resty-_是如何编写的？","date":"2025-02-22T00:00:00.000Z","categories":["OpenResty从入门到实战"],"head":[["link",{"rel":"canonical","href":"https://www.doit.ip-ddns.com/pages/repository/编程/OpenResty从入门到实战/23[视频]导读lua-resty-requests：优秀的lua-resty-_是如何编写的？"}]]},"headers":[],"relativePath":"pages/repository/编程/OpenResty从入门到实战/23[视频]导读lua-resty-requests：优秀的lua-resty-_是如何编写的？.md","filePath":"pages/repository/编程/OpenResty从入门到实战/23[视频]导读lua-resty-requests：优秀的lua-resty-_是如何编写的？.md","lastUpdated":1739887664000}');const p=e({name:"pages/repository/编程/OpenResty从入门到实战/23[视频]导读lua-resty-requests：优秀的lua-resty-_是如何编写的？.md"},[["render",function(e,r,p,n,l,i){return a(),s("div",null,r[0]||(r[0]=[t('<div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>                            23 [视频]导读lua-resty-requests：优秀的lua-resty-_是如何编写的？</span></span>\n<span class="line"><span>                            23 [视频]导读lua-resty-requests：优秀的lua-resty-*是如何编写的？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>你好，我是温铭。</p><p>今天的内容，我同样会以视频的形式来讲解。老规矩，在你进行视频学习之前，先问你这么几个问题：</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>面对多个相同功能的 lua-resty 库，我们应该从哪些方面来选择？</span></span>\n<span class="line"><span>如何来组织一个 lua-resty 的结构？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这几个问题，也是今天视频课要解决的核心内容，希望你可以先自己思考一下，并带着问题来学习今天的视频内容。</p><p>同时，我会给出相应的文字介绍，方便你在听完视频内容后，及时总结与复习。下面是今天这节课的文字介绍部分。</p><p>今日核心</p><p>前面我们介绍过的 lua-resty 库都是官方自带的，但在 HTTP client 这个最常用的库上，官方并没有。这时候，我们就得自己来选择一个优秀的第三方库了。</p><p>那么，如何在众多的 lua-resty HTTP client 中，选择一个最好、最适合自己的第三方库呢？</p><p>这时候，你就需要综合考虑活跃度、作者、测试覆盖度、接口封装等各方面的因素了。我最后选择的是 lua-resty-requests（<a href="https://github.com/tokers/lua-resty-requests%EF%BC%89%EF%BC%8C%E5%AE%83%E6%98%AF%E7%94%B1%E5%8F%88%E6%8B%8D%E4%BA%91%E7%9A%84%E5%B7%A5%E7%A8%8B%E5%B8%88" target="_blank" rel="noreferrer">https://github.com/tokers/lua-resty-requests），它是由又拍云的工程师</a> tokers 贡献的，我个人很喜欢它的接口风格，也推荐给你。</p><p>在视频中我会从最简单的 get 接口入手，结合文档、测试案例和源码，来逐步展开。你可以看到一个优秀的 lua-resty 库是如何编写的，有哪些可以借鉴的地方。</p><p>课件参考</p><p>今天的课件已经上传到了我的GitHub上，你可以自己下载学习。</p><p>链接如下：<a href="https://github.com/iresty/geektime-slides" target="_blank" rel="noreferrer">https://github.com/iresty/geektime-slides</a></p><p>如果有不清楚的地方，你可以在留言区提问，另也可以在留言区分享你的学习心得。期待与你的对话，也欢迎你把这篇文章分享给你的同事、朋友，我们一起交流、一起进步。</p>',15)]))}]]);export{r as __pageData,p as default};
